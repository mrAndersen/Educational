<?php

//сколько простых хотим получить
$max = 2000;

//функция которая проверят простое ли число
function isPrime(int $int): bool
{
    //популярные делители, для того чтобы ускорить программу
    //проверим сначала популярные делители, поскольку если например 44 делится на 2 (и мы можем сразу это проверить)
    //то нет смысла дальше искать делители - сразу ясно что число не простое
    $simpleCases = [2, 3, 5, 7, 10, 11, 13, 17, 19, 23];

    //Перебираем популярные делители
    foreach ($simpleCases as $case) {
        //Если остаток от деления заданного числа и популярног делителя равен 0, то есть число делится без остатка
        //И при этом само число не равно популярному делетилю - то сразу говорим что это не простое число
        if ($int % $case == 0 && $int != $case) {
            return false;
        }
    }

    //Если всё же никакой из вышеперечисленных популярных детитель не подошел
    //Перебираем уже с двойки все делители в попытке определить делители и как следствие понять простое ли число

    //2 делителя уже по любому есть (1 и само число)
    $d = 2;

    //перебираем от 2 включительно и до самого числа ИСКЛЮЧАЯ его
    for ($j = 2; $j < $int; $j++) {
        //если делится без остатка - значит новый делитель
        if ($int % $j == 0) {
            $d++;
        }
    }

    //если делителей больше двух - то значит не простое число
    if ($d > 2) {
        return false;
    }

    return true;
}

$start = microtime(true);
echo("\n==Single thread prime search with dev commentary (:==\n");

//счетчик чисел
$k = 0;

//счетчик найденных простых чисел
$p = 1;

//Перебираем числа до тех пор, пока не будет найдено нужное количество простых чисел
do {
    $k++;

    if (isPrime($k)) {
        echo(sprintf("\r\tProgress = %d\%d [Current = %d]", $p, $max, $k));
        $p++;
    }
} while ($p <= $max);

$end = (microtime(true) - $start) * 1000;

echo(
sprintf(
    "\n\n\tDone in %dms, %.2fms per single integer\n",
    $end,
    $end / $max
)
);